name: Build and deploy Python app to Azure Web App - parthbhanderi

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Remove existing virtual environment if it exists
        run: |
          if [ -d "venv" ]; then
            rm -rf venv
          fi

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install dependencies
        run: |
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Make run.sh executable
        run: chmod +x run.sh

      - name: Clean and prepare for deployment
        run: |
          rm -rf __pycache__
          rm -rf *.pyc
          rm -rf .pytest_cache

      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            release.zip
            !venv/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: Configure virtual environment for deployment
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Make run.sh executable and verify environment
        run: |
          chmod +x run.sh
          echo "Using Python: $(which python)"
          pip list

      - name: Cleanup Azure Web App Deployment Locks
        run: |
          # Cleanup lock files
          if [ -d "/home/site/locks" ]; then
            echo "Locks directory exists. Checking for lock files..."
            if [ -f "/home/site/locks/status.lock" ]; then
              echo "Deleting status.lock..."
              rm -f /home/site/locks/status.lock
            fi
            if [ -f "/home/site/locks/info.lock" ]; then
              echo "Deleting info.lock..."
              rm -f /home/site/locks/info.lock
            fi
          else
            echo "Locks directory does not exist. Skipping lock cleanup."
          fi

          # Clear deployments directory
          if [ -d "/home/site/deployments" ]; then
            echo "Deployments directory exists. Clearing contents..."
            rm -rf /home/site/deployments/*
          else
            echo "Deployments directory does not exist. Skipping cleanup."
          fi
      
      - name: Configure App Service settings
        uses: Azure/appservice-settings@v1
        with:
          app-name: 'parthb'
          app-settings-json: |
            [
              {
                "name": "SCM_DO_BUILD_DURING_DEPLOYMENT",
                "value": "true"
              }
            ]

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'parthb'
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: .
          clean: true
          restart: true